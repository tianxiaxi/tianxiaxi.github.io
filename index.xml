<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>素问小站</title>
        <link>https://tianxiaxi.github.io/</link>
        <description>素问小站 - 记录个人生活与随笔</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>zanran2046@gmail.com (素问)</managingEditor>
            <webMaster>zanran2046@gmail.com (素问)</webMaster><lastBuildDate>Fri, 10 Mar 2023 19:47:53 &#43;0800</lastBuildDate>
            <atom:link href="https://tianxiaxi.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Github项目对比 - rax VS flutter VS taro VS Hippy VS chameleon</title>
    <link>https://tianxiaxi.github.io/2023/03/github_repo_compare_rax_vsflutter_vstaro_vshippy_vschameleon/</link>
    <pubDate>Sun, 19 Mar 2023 09:41:19 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/github_repo_compare_rax_vsflutter_vstaro_vshippy_vschameleon/</guid>
    <description><![CDATA[rax VS flutter VS taro VS Hippy VS chameleon 对比分析 本文档更新时间: 2023-03-19
对比项 rax flutter taro Hippy chameleon 仓库名称 rax flutter taro Hippy chameleon 是否公开 public public public public public 是否归档 未归档 未归档 未归档 未归档 未归档 创建时间 2016-10-14 07:53:50 2015-03-06 22:54:58 2018-04-08 09:32:26 2019-11-15 01:55:31 2019-01-18 14:41:35 创建时间(月) 截止目前共 78 个月 截止目前共 97 个月 截止目前共 60 个月 截止目前共 40 个月 截止目前共 50 个月 关注度 Watch: 204
Fork: 659
Starred: 7873]]></description>
</item>
<item>
    <title>Github 开源项目对比分析 - axum VS Rocket VS actix-web</title>
    <link>https://tianxiaxi.github.io/2023/03/github_repo_compare_axum_vsrocket_vsactix-web/</link>
    <pubDate>Wed, 15 Mar 2023 20:12:33 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/github_repo_compare_axum_vsrocket_vsactix-web/</guid>
    <description><![CDATA[axum VS Rocket VS actix-web 对比分析 本文档更新时间: 2023-03-15
对比项 axum Rocket actix-web 仓库名称 axum Rocket actix-web 是否公开 public public public 是否归档 未归档 未归档 未归档 创建时间 2021-05-30 09:22:25 2016-03-18 02:50:18 2017-09-30 15:30:02 创建时间(月) 截止目前共 21 个月 截止目前共 85 个月 截止目前共 66 个月 关注度 Watch: 93
Fork: 638
Starred: 9082
Opened Issues: 26 Watch: 264
Fork: 1396
Starred: 20073
Opened Issues: 162 Watch: 224
Fork: 1478
Starred: 16898
Opened Issues: 147 平均每月关注度 Watch: 4]]></description>
</item>
<item>
    <title>Github 开源项目对比分析 - AppFlowy VS AFFiNE VS logseq</title>
    <link>https://tianxiaxi.github.io/2023/03/github_repo_compare_appflowy_vsaffine_vslogseq/</link>
    <pubDate>Wed, 15 Mar 2023 20:03:13 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/github_repo_compare_appflowy_vsaffine_vslogseq/</guid>
    <description><![CDATA[AppFlowy VS AFFiNE VS logseq 对比分析 本文档更新时间: 2023-03-15
对比项 AppFlowy AFFiNE logseq 仓库名称 AppFlowy AFFiNE logseq 是否公开 public public public 是否归档 未归档 未归档 未归档 创建时间 2021-06-16 12:56:48 2022-07-31 18:45:21 2020-05-23 00:06:06 创建时间(月) 截止目前共 21 个月 截止目前共 7 个月 截止目前共 34 个月 关注度 Watch: 291
Fork: 1912
Starred: 32707
Opened Issues: 394 Watch: 122
Fork: 648
Starred: 13635
Opened Issues: 153 Watch: 177
Fork: 1262
Starred: 21028
Opened Issues: 1408 平均每月关注度 Watch: 13]]></description>
</item>
<item>
    <title>mongoose介绍</title>
    <link>https://tianxiaxi.github.io/2023/03/mongoose/</link>
    <pubDate>Thu, 09 Mar 2023 08:51:57 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/mongoose/</guid>
    <description><![CDATA[mongoose介绍 mongoose 是一个标准的 C 语言网络通信模块，是嵌入式网络编程的瑞士军刀。mongoose 提供非阻塞的事件驱动的 TCP, UDP, HTTP, WebSocket, CoAP, MQTT 的服务端与客户端模式的APIs。
mongoose 主要包含如下功能：
Cross-platform: works on Linux/UNIX, MacOS, QNX, eCos, Windows, Android, iPhone, FreeRTOS (TI CC3200, ESP8266), etc
Supported hardware platforms: TI CC3200, TI MSP432, NRF52, STM32, PIC32, ESP8266, ESP32 and more
Builtin protocols:
plain TCP, plain UDP, SSL/TLS (over TCP, one-way or two-way)
HTTP client, HTTP server
WebSocket client, WebSocket server
MQTT client, MQTT broker
CoAP client, CoAP server]]></description>
</item>
<item>
    <title>前端存储方案</title>
    <link>https://tianxiaxi.github.io/2023/03/frontend_storage/</link>
    <pubDate>Thu, 09 Mar 2023 08:44:39 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/frontend_storage/</guid>
    <description><![CDATA[cookie/session cookie cookie是一种客户端会话跟踪技术，用于将网页的数据存储到浏览器中。当关闭浏览器或到过期时间时，cookie将失效。
cookie存在大小限制，一般个数限制为20~50，大小限制在4KB左右。
cookie在每次请求时将携带在HTTP头中，如果cookie保存过多数据可能存在性能问题。
Caution:
浏览器可能禁用cookie 不要利用cookie保存隐私数据 设置HttpOnly属性可避免XSS攻击 session session为会话数据，保存在Web服务器上，主要负责访问者与网站之间的交互。
HTML5新增存储方案 HTML5中新增存储方案，包括sessionStorage、localStorage、WebSQL、IndexedDB。下列所有存储方案均遵循同源策略限制。
localStorage localStorage生命周期是永久，可实现数据持久化存储。除非用户手动清除，否则localStorage存储的数据一直保存在浏览器中。
localStorage的大小一般为5MB，不参与与服务端的通信。
Caution: localStorage在浏览器隐私模式下不可读取；存储内容多会消耗内存空间，导致页面卡顿。
sessionStorage sessionStorage仅在当前会话下有效，关闭页面或者浏览器后被清理并失效。
sessionStorage的大小一般为5MB。
Caution: sessionStorage无法跨Tab共享： 打开新页面时，将导致session失效；通过Duplicate 复制Tab时，sessionStorage失效。故在持久化存储时，优先考虑localStorage。
WebSQL WebSQL数据库API不是HTML5规范的一部分，但它是一个独立的规范，引入一组使用SQL操作客户端数据库的API。
WebSQL与关系数据库的概念相似，支持openDatabase/transaction/executeSQL 等操作，在Chrome浏览器中支持，一般情况下较少使用，作为临时存储或缓存使用。
Caution: 仅Chrome、Safari、Opera支持，IE、Firefox等浏览器不支持。
IndexedDB IndexedDB是浏览器提供的本地数据库存储，允许存储大容量数据，提供查找接口、建立索引等功能；但IndexedDB不支持SQL，接近NoSQL数据库。
IndexedDB具有键值存储、异步、支持事务、同源限制（不支持跨域访问）、大容量（&gt;=250MB）、支持二进制等特性。
前端框架存储方案介绍 React Redux-persist
Redux-persist 通过将redux存储的数据缓存到localStorage中实现数据持久化存储。
react-redux
React-redux将数据存储在内存中，当页面刷新时，存储的数据将被重置。
其它存储方案 Cache Storage Cache Storage存储Response对象，即存储HTTP响应。Cache Storage是多个Cache的集合，每个Cache可以存储多个Response对象。
Cache Storage在浏览器上的引用名是caches而不是驼峰写法的cacheStorage ，它定义在ServiceWorker规范中。
Application Cache HTML5引入了应用程序缓存技术，意味着web应用可以进行缓存。在没有网络的情况下，通过创建cache manifest文件，可以轻松创建离线应用。目前主流浏览器均支持Application cache。
Application cache有三个优势：离线浏览、提升页面的载入速度、降低服务器压力。
Application cache主要存储静态资源。使用时服务端需要维护一个manifest清单，浏览器需要进行简单设置。
应用场景分析 存储用户登陆状态 在大多数Web应用中，当用户登陆后，后端生成无意义的字符串token ，同时将token返回给前端。前端在后续所有请求中，将token附加到Header中传输到后端，后端进行token校验。前端在存储Token时，主流的如下几种方案：
sessionStorage: 会话期间内存储，但无法跨浏览器Tab共享数据。
localStrogage: 永久存储。当token过期时，需要重新设置，涉及同步处理；当网站被XSS注入攻击后，对方可能截取localStorage中的数据；localStorage是同步操作，频繁读取可能存在性能问题。
cookie: 使用cookie存储用户登陆状态是目前Web开发主流中的主流。]]></description>
</item>
<item>
    <title>读书笔记 - [季羡林]读书与做人</title>
    <link>https://tianxiaxi.github.io/2023/03/jixianlin_dushu_yu_zuoren/</link>
    <pubDate>Thu, 09 Mar 2023 08:19:15 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/jixianlin_dushu_yu_zuoren/</guid>
    <description><![CDATA[《读书与做人》简介 一代学术宗师季羡林先生，道德高尚，学问渊深，文章亦足以动人。
季老谈读书，深入浅出，举重若轻，以大学者而写作小文章，从中可见出一代学问家对学术的真诚与崇敬，读者亦可从中体悟到文史学科的一般入门途径。
季老论人生，信笔拈来，娓娓道出，以近于期颐之历练与心态，平和面对人世间的种种苦难，深于情，而不矫揉造作；明于理，而以平实朴素笔调发之，可给人以启迪与心灵的抚慰。
读书笔记 上个月初购买kindle之后，一段时间内致力于kindle电子书的收集，《读书与做人》是第一本找到的令人满意的电子书。在新阅读设备及新书的双重愉悦下，利用一个星期的业余时间阅读完该书，颇有收获，闲暇时记录下来以备将来复习。
从书名来看，包括读书与做人两部分，但从内容角度，可以分为自传、序集、做人三部分。
第一部分自传，从出生、小学、中学、大学、德国留学、归国后北大任教、翻译及文学推广，简短的文字描述了季老平淡、充实、传奇的一生。通过作者的自述，发现大部份熟知的成功人士所具备的经历在季老身上都完美呈现。在小时候不仅有极高的语言天赋，还博学多识，有读无类，不管英语或国学，都为接下来的发展打下坚实的基础。人并非生而知之，一个人的成功，离不开外缘与内因，在清华读书期间，跟随陈寅恪、朱光潜两位国学大师学习，潜移默化中影响深远，终身在这条道路上奋斗，是为外缘；德国哥廷根留学期间，潜心研学佛教史及梵文、巴利文、俄文、火星罗文等多门语言，正所谓十年寒窗无人知，一朝成名天下知，十年闭关研学是为内因，积淀与升华，成为一代国学大师与学界泰斗。这让我想到了另一位国学大师南怀谨，也有类似的经历，早年游学，涉猎多方，峨眉山三年关闭，为后续人生道路奠下基础。
第二部分序集，是季老为其它出版作品写书的序言集合。生平很少写序言，写必有因，写必无假话，其书都可以作为我们的补充阅读。
第三部分做人，流露出对青年一代做事做人的殷切关怀，以小见大，讨论人与自然、人与自身、人与社会的相处之道，也是对其自身的总结与自述。 经过这本书，认识到季老是如此一个可爱的人，有风趣、有风骨、有脾气，恰是一个身边人，恰是我们的一个外缘。]]></description>
</item>
<item>
    <title>Clang format for C/C&#43;&#43;/Java/JavaScript/Object-C</title>
    <link>https://tianxiaxi.github.io/2023/03/clang_format/</link>
    <pubDate>Thu, 09 Mar 2023 08:12:07 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/clang_format/</guid>
    <description><![CDATA[Clang-format简介 clang-format是一个代码格式化的工具，支持C/C++/Java/JavaScript/Objective-C/Protobuf等多种语言，并提供LLVM、Google、Visual Studio（仅VSCode支持）、Chromium、Mozilla、WebKit等多种默认代码规范支持。
Usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 $ clang-format -help OVERVIEW: A tool to format C/C++/Java/JavaScript/Objective-C/Protobuf code.]]></description>
</item>
<item>
    <title>个人常用工具集</title>
    <link>https://tianxiaxi.github.io/2023/03/personal-recommend-utils/</link>
    <pubDate>Tue, 07 Mar 2023 08:37:14 &#43;0800</pubDate>
    <author>素问</author>
    <guid>https://tianxiaxi.github.io/2023/03/personal-recommend-utils/</guid>
    <description><![CDATA[开发必备工具 VSCode Website: https://code.visualstudio.com/ 简介：This is the only editor which I used for my develop career since vscode released. Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages and runtimes (such as C++, C#, Java, Python, PHP, Go, .]]></description>
</item>
</channel>
</rss>
